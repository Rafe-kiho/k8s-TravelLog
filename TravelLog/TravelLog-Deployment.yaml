apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-nginx-deployment
  namespace: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: react-nginx
  template:
    metadata:
      labels:
        app: react-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.19.0
        ports:
        - containerPort: 80
      - name: react
        image: react-app:latest
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-mysql-deployment
  namespace: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-mysql
  template:
    metadata:
      labels:
        app: django-mysql
    spec:
      containers:
      - name: django
        image: django-app:latest
        ports:
        - containerPort: 8000
        env:
        - name: MYSQL_HOST
          value: mysql
        - name: MYSQL_DB
          value: appdb
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
      - name: mysql
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MYSQL_DATABASE
          value: appdb
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
